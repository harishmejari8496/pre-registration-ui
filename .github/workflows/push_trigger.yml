
name: Maven Package upon a push 

on:
  push:
    branches:
      - master
      - 1.0.*
      - develop
      - 1.1.*
  
jobs:      
# This workflow contains a single job called "build"
  build-pre-registration-ui:
    
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets. dev_namespace_docker_hub }}
      SERVICE_NAME: pre-registration-ui
      SERVICE_LOCATION: pre-registration-ui

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        
      - name: npm install
        run: cd ${{ env.SERVICE_LOCATION }} && npm install --ignore-scripts
      
      - name: npm build
        run: cd ${{ env.SERVICE_LOCATION }} && npm run-script build -- --prod --base-href . --output-path=dist
      - name: Setup branch and env 
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
          echo "GPG_TTY=$(tty)" >> $GITHUB_ENV
      - name: setup environment
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

      - name: run sonar analysis
        run: |
          cd "./${{env.SERVICE_LOCATION}}"
          text="sonar.host.url=https://sonarcloud.io\nsonar.login=${{ secrets.SONAR_TOKEN }}\nsonar.projectKey=mosip_${{ github.event.repository.name }}\nsonar.organization=${{ secrets.ORG_KEY }}\nsonar.sourceEncoding=UTF-8\nsonar.sources=src\nsonar.exclusions=**/node_modules/**\nsonar.tests=src\nsonar.test.inclusions=**/*.spec.ts" && echo $text >> sonar-project.properties
          npm install sonar-scanner && npm run sonar

      - name: Build image
        run: |
          cd "./${{env.SERVICE_LOCATION}}"
          docker build . --file Dockerfile --tag ${{ env.SERVICE_NAME }}
      
      - name: Log into registry
        run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin
        
      - name: Push image
        run: |
          IMAGE_ID=$NAMESPACE/$SERVICE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$BRANCH_NAME
          echo "push version $VERSION"
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $SERVICE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
